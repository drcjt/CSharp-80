name: "Build"

on: 
  push:
    branches: [ main ]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
    cancel-in-progress: true

permissions:
  # deployments permission to deploy GitHub pages website
  deployments: write
  # contents permission to update benchmark contents in gh-pages branch
  contents: write

jobs:
  build:
    strategy:
      matrix:
        platform: [Trs80,ZXSpectrum,CPM]
      fail-fast: false
    name: Build, Test and Analyze for ${{ matrix.platform }} 
    runs-on: windows-latest

    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - name: Cache SonarCloud packages
        if: matrix.platform == 'Trs80'
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache SonarCloud scanner
        if: matrix.platform == 'Trs80'
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner

      - name: Install SonarCloud scanner
        if: matrix.platform == 'Trs80' && steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner

      - name: Setup .NET Core SDK
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '7.0.x'

      - uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget

      - name: Install dependencies
        run: dotnet restore

      - name: Sonarqube setup
        if: matrix.platform == 'Trs80'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"drcjt_CSharp-80" /o:"drcjt" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="**/coverage.opencover.xml" /d:sonar.cs.vstest.reportsPaths="**/*.trx" /d:sonar.coverage.exclusions="**Tests*.cs,Samples/**/*"

      - name: Build
        run: dotnet build --configuration Release --no-restore -p:TargetPlatform=${{ matrix.platform }}

      - name: Test
        run: dotnet test --configuration Release --no-restore -p:TargetPlatform=${{ matrix.platform }} --collect:"XPlat Code Coverage;Format=opencover" --logger:trx --results-directory "TestResults-${{ matrix.platform }}" -p:BuildInParallel=false -m:1 

      - name: Upload dotnet test results
        uses: actions/upload-artifact@v3
        with:
          name: dotnet-results-${{ matrix.platform }}
          path: TestResults
        # Use always() to always run this step to publish test results when there are test failures
        if: ${{ always() }}

      - name: Upload benchmark results
        # Use always() to always run this step to publish benchmark results when there are test failures
        if: ${{ matrix.platform == 'Trs80' }} && ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: benchmark-results
          path: benchmark-results.txt

      - name: Sonarqube end analysis
        if: matrix.platform == 'Trs80'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Store benchmark result
        if: matrix.platform == 'Trs80'
        uses: benchmark-action/github-action-benchmark@v1
        with:
          name: CSharp-80 Benchmark
          tool: 'customSmallerIsBetter'
          output-file-path: benchmark-results.txt
          fail-on-alert: true
          # Access token to deploy GitHub Pages branch
          github-token: ${{ secrets.GITHUB_TOKEN }}
          # Push and deploy GitHub pages branch automatically
          auto-push: true
          gh-pages-branch: gh-pages
          benchmark-data-dir-path: docs/bench

      - name: Upload .cmd, .dsk files for trs80 platform if they exist
        if: matrix.platform == 'Trs80'
        uses: actions/upload-artifact@v3
        with:
          name: samples-${{ matrix.platform }}
          path: |
            Samples/**/*.cmd
            Samples/*.dsk

      - name: Upload .tap files for zx spectrum platform if they exist
        if: matrix.platform == 'ZXSpectrum'
        uses: actions/upload-artifact@v3
        with:
          name: samples-${{ matrix.platform }}
          path: Samples/**/*.tap

      - name: Upload .hex files for cpm platform if they exist
        if: matrix.platform == 'CPM'
        uses: actions/upload-artifact@v3
        with:
          name: samples-${{ matrix.platform }}
          path: Samples/**/*.hex
